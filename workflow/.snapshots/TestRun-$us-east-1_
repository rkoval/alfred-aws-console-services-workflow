([]*aw.Item) (len=157) {
  (*aw.Item)({
    title: (string) (len=5) "alexa",
    subtitle: (*string)((len=59) "Alexa for Business â€“ Empower your organization with voice"),
    match: (*string)((len=24) "alexa Alexa for Business"),
    uid: (*string)((len=5) "alexa"),
    autocomplete: (*string)((len=17) "$us-east-1 alexa "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/a4b/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=16) "images/alexa.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "amplify",
    subtitle: (*string)((len=62) "Amplify â€“ Develop & deploy cloud-powered mobile and web apps"),
    match: (*string)((len=15) "amplify Amplify"),
    uid: (*string)((len=7) "amplify"),
    autocomplete: (*string)((len=19) "$us-east-1 amplify "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/amplify/home?region=us-east-1#/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/amplify.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "apigateway",
    subtitle: (*string)((len=50) "ðŸ—‚ API Gateway â€“ Build, Deploy and Manage APIs"),
    match: (*string)((len=22) "apigateway API Gateway"),
    uid: (*string)((len=10) "apigateway"),
    autocomplete: (*string)((len=22) "$us-east-1 apigateway "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/apigateway/main/apis?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/apigateway.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "appstream",
    subtitle: (*string)((len=73) "AppStream 2.0 â€“ Stream desktop applications securely to any web browser"),
    match: (*string)((len=23) "appstream AppStream 2.0"),
    uid: (*string)((len=9) "appstream"),
    autocomplete: (*string)((len=21) "$us-east-1 appstream "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/appstream2/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/appstream.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "appsync",
    subtitle: (*string)((len=86) "AppSync â€“ Real-Time Data Sync Using GraphQL for Mobile & Web Apps, Online or Offline"),
    match: (*string)((len=15) "appsync AppSync"),
    uid: (*string)((len=7) "appsync"),
    autocomplete: (*string)((len=19) "$us-east-1 appsync "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/appsync/home?region=us-east-1#/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/appsync.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "apprunner",
    subtitle: (*string)((len=75) "ðŸ—‚ App Runner â€“ Deploy containerized web applications and APIs at scale"),
    match: (*string)((len=20) "apprunner App Runner"),
    uid: (*string)((len=9) "apprunner"),
    autocomplete: (*string)((len=21) "$us-east-1 apprunner "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/apprunner/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/apprunner.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "artifact",
    subtitle: (*string)((len=55) "ðŸ—‚ Artifact â€“ AWS Compliance Reports and Agreements"),
    match: (*string)((len=17) "artifact Artifact"),
    uid: (*string)((len=8) "artifact"),
    autocomplete: (*string)((len=20) "$us-east-1 artifact "),
    arg: ([]string) (len=1) {
      (string) (len=44) "https://console.aws.amazon.com/artifact/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/artifact.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "athena",
    subtitle: (*string)((len=37) "Athena â€“ Query Data in S3 using SQL"),
    match: (*string)((len=13) "athena Athena"),
    uid: (*string)((len=6) "athena"),
    autocomplete: (*string)((len=18) "$us-east-1 athena "),
    arg: ([]string) (len=1) {
      (string) (len=70) "https://us-east-1.console.aws.amazon.com/athena/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/athena.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "autoscaling",
    subtitle: (*string)((len=93) "Auto Scaling â€“ AWS Auto Scaling enables you to quickly scale your entire application on AWS"),
    match: (*string)((len=24) "autoscaling Auto Scaling"),
    uid: (*string)((len=11) "autoscaling"),
    autocomplete: (*string)((len=23) "$us-east-1 autoscaling "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/awsautoscaling/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/autoscaling.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "backup",
    subtitle: (*string)((len=73) "ðŸ—‚ Backup â€“ centrally manage and automate backups across AWS services"),
    match: (*string)((len=13) "backup Backup"),
    uid: (*string)((len=6) "backup"),
    autocomplete: (*string)((len=18) "$us-east-1 backup "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/backup/home?region=us-east-1#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/backup.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=5) "batch",
    subtitle: (*string)((len=42) "ðŸ—‚ Batch â€“ Run Batch Jobs at Any Scale"),
    match: (*string)((len=11) "batch Batch"),
    uid: (*string)((len=5) "batch"),
    autocomplete: (*string)((len=17) "$us-east-1 batch "),
    arg: ([]string) (len=1) {
      (string) (len=69) "https://us-east-1.console.aws.amazon.com/batch/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=16) "images/batch.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "bedrock",
    subtitle: (*string)((len=88) "ðŸ—‚ Bedrock â€“ Build and scale generative AI applications with foundation models (FMs)"),
    match: (*string)((len=15) "bedrock Bedrock"),
    uid: (*string)((len=7) "bedrock"),
    autocomplete: (*string)((len=19) "$us-east-1 bedrock "),
    arg: ([]string) (len=1) {
      (string) (len=71) "https://us-east-1.console.aws.amazon.com/bedrock/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/bedrock.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "blockchain",
    subtitle: (*string)((len=73) "ðŸ—‚ Blockchain â€“ Easily create and manage scalable blockchain networks"),
    match: (*string)((len=21) "blockchain Blockchain"),
    uid: (*string)((len=10) "blockchain"),
    autocomplete: (*string)((len=22) "$us-east-1 blockchain "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/managedblockchain/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/blockchain.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "billing",
    subtitle: (*string)((len=70) "ðŸ—‚ Billing â€“ Access, analyze, and control your AWS costs and usage"),
    match: (*string)((len=15) "billing Billing"),
    uid: (*string)((len=7) "billing"),
    autocomplete: (*string)((len=19) "$us-east-1 billing "),
    arg: ([]string) (len=1) {
      (string) (len=43) "https://console.aws.amazon.com/billing/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/billing.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "acm",
    subtitle: (*string)((len=85) "ðŸ—‚ Certificate Manager (ACM) â€“ Provision, Manage, and Deploy SSL/TLS Certificates"),
    match: (*string)((len=3) "acm"),
    uid: (*string)((len=3) "acm"),
    autocomplete: (*string)((len=15) "$us-east-1 acm "),
    arg: ([]string) (len=1) {
      (string) (len=68) "https://us-east-1.console.aws.amazon.com/acm/home?region=us-east-1#/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/acm.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=5) "chime",
    subtitle: (*string)((len=82) "Chime â€“ Amazon Chime is a communications service that transforms online meetings"),
    match: (*string)((len=11) "chime Chime"),
    uid: (*string)((len=5) "chime"),
    autocomplete: (*string)((len=17) "$us-east-1 chime "),
    arg: ([]string) (len=1) {
      (string) (len=36) "https://console.chime.aws.amazon.com"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=16) "images/chime.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "cloud9",
    subtitle: (*string)((len=63) "Cloud9 â€“ A Cloud IDE for Writing, Running, and Debugging Code"),
    match: (*string)((len=13) "cloud9 Cloud9"),
    uid: (*string)((len=6) "cloud9"),
    autocomplete: (*string)((len=18) "$us-east-1 cloud9 "),
    arg: ([]string) (len=1) {
      (string) (len=70) "https://us-east-1.console.aws.amazon.com/cloud9/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/cloud9.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "cloudformation",
    subtitle: (*string)((len=66) "ðŸ—‚ CloudFormation â€“ Create and Manage Resources with Templates"),
    match: (*string)((len=29) "cloudformation CloudFormation"),
    uid: (*string)((len=14) "cloudformation"),
    autocomplete: (*string)((len=26) "$us-east-1 cloudformation "),
    arg: ([]string) (len=1) {
      (string) (len=85) "https://us-east-1.console.aws.amazon.com/cloudformation/home?region=us-east-1#/stacks"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/cloudformation.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "cloudfront",
    subtitle: (*string)((len=51) "ðŸ—‚ CloudFront â€“ Global Content Delivery Network"),
    match: (*string)((len=21) "cloudfront CloudFront"),
    uid: (*string)((len=10) "cloudfront"),
    autocomplete: (*string)((len=22) "$us-east-1 cloudfront "),
    arg: ([]string) (len=1) {
      (string) (len=47) "https://console.aws.amazon.com/cloudfront/home#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/cloudfront.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "cloudhsm",
    subtitle: (*string)((len=64) "ðŸ—‚ CloudHSM â€“ Managed Hardware Security Modules in the Cloud"),
    match: (*string)((len=17) "cloudhsm CloudHSM"),
    uid: (*string)((len=8) "cloudhsm"),
    autocomplete: (*string)((len=20) "$us-east-1 cloudhsm "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/cloudhsm/home?region=us-east-1#/clusters"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/cloudhsm.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "cloudmap",
    subtitle: (*string)((len=52) "ðŸ—‚ Cloud Map â€“ Build a dynamic map of your cloud"),
    match: (*string)((len=18) "cloudmap Cloud Map"),
    uid: (*string)((len=8) "cloudmap"),
    autocomplete: (*string)((len=20) "$us-east-1 cloudmap "),
    arg: ([]string) (len=1) {
      (string) (len=82) "https://us-east-1.console.aws.amazon.com/cloudmap/home?region=us-east-1#namespaces"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/cloudmap.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "cloudsearch",
    subtitle: (*string)((len=38) "CloudSearch â€“ Managed Search Service"),
    match: (*string)((len=23) "cloudsearch CloudSearch"),
    uid: (*string)((len=11) "cloudsearch"),
    autocomplete: (*string)((len=23) "$us-east-1 cloudsearch "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-east-1.console.aws.amazon.com/cloudsearch/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/cloudsearch.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "cloudshell",
    subtitle: (*string)((len=34) "CloudShell â€“ Browser-based shell"),
    match: (*string)((len=21) "cloudshell CloudShell"),
    uid: (*string)((len=10) "cloudshell"),
    autocomplete: (*string)((len=22) "$us-east-1 cloudshell "),
    arg: ([]string) (len=1) {
      (string) (len=69) "https://us-east-1.console.aws.amazon.com/cloudshell?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/cloudshell.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "cloudtrail",
    subtitle: (*string)((len=53) "ðŸ—‚ CloudTrail â€“ Track User Activity and API Usage"),
    match: (*string)((len=21) "cloudtrail CloudTrail"),
    uid: (*string)((len=10) "cloudtrail"),
    autocomplete: (*string)((len=22) "$us-east-1 cloudtrail "),
    arg: ([]string) (len=1) {
      (string) (len=84) "https://us-east-1.console.aws.amazon.com/cloudtrail/home?region=us-east-1#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/cloudtrail.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "cloudwatch",
    subtitle: (*string)((len=54) "ðŸ—‚ CloudWatch â€“ Monitor Resources and Applications"),
    match: (*string)((len=21) "cloudwatch CloudWatch"),
    uid: (*string)((len=10) "cloudwatch"),
    autocomplete: (*string)((len=22) "$us-east-1 cloudwatch "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/cloudwatch/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/cloudwatch.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "codeartifact",
    subtitle: (*string)((len=78) "ðŸ—‚ CodeArtifact â€“ Secure, scalable, and cost-effective artifact management"),
    match: (*string)((len=25) "codeartifact CodeArtifact"),
    uid: (*string)((len=12) "codeartifact"),
    autocomplete: (*string)((len=24) "$us-east-1 codeartifact "),
    arg: ([]string) (len=1) {
      (string) (len=89) "https://us-east-1.console.aws.amazon.com/codesuite/codeartifact/domains?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/codeartifact.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "codebuild",
    subtitle: (*string)((len=38) "ðŸ—‚ CodeBuild â€“ Build and Test Code"),
    match: (*string)((len=19) "codebuild CodeBuild"),
    uid: (*string)((len=9) "codebuild"),
    autocomplete: (*string)((len=21) "$us-east-1 codebuild "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/codesuite/codebuild/projects?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/codebuild.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "codecommit",
    subtitle: (*string)((len=58) "ðŸ—‚ CodeCommit â€“ Store Code in Private Git Repositories"),
    match: (*string)((len=21) "codecommit CodeCommit"),
    uid: (*string)((len=10) "codecommit"),
    autocomplete: (*string)((len=22) "$us-east-1 codecommit "),
    arg: ([]string) (len=1) {
      (string) (len=92) "https://us-east-1.console.aws.amazon.com/codesuite/codecommit/repositories?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/codecommit.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "codedeploy",
    subtitle: (*string)((len=45) "ðŸ—‚ CodeDeploy â€“ Automate Code Deployments"),
    match: (*string)((len=21) "codedeploy CodeDeploy"),
    uid: (*string)((len=10) "codedeploy"),
    autocomplete: (*string)((len=22) "$us-east-1 codedeploy "),
    arg: ([]string) (len=1) {
      (string) (len=91) "https://us-east-1.console.aws.amazon.com/codesuite/codedeploy/deployments?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/codedeploy.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "codepipeline",
    subtitle: (*string)((len=64) "ðŸ—‚ CodePipeline â€“ Release Software using Continuous Delivery"),
    match: (*string)((len=25) "codepipeline CodePipeline"),
    uid: (*string)((len=12) "codepipeline"),
    autocomplete: (*string)((len=24) "$us-east-1 codepipeline "),
    arg: ([]string) (len=1) {
      (string) (len=91) "https://us-east-1.console.aws.amazon.com/codesuite/codepipeline/pipelines?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/codepipeline.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "developertools",
    subtitle: (*string)((len=84) "ðŸ—‚ Developer Tools â€“ Host code, build, test, and deploy your applications to AWS"),
    match: (*string)((len=40) "developertools Developer Tools codesuite"),
    uid: (*string)((len=14) "developertools"),
    autocomplete: (*string)((len=26) "$us-east-1 developertools "),
    arg: ([]string) (len=1) {
      (string) (len=91) "https://us-east-1.console.aws.amazon.com/codesuite/settings/notifications?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/developertools.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "codestar",
    subtitle: (*string)((len=56) "ðŸ—‚ Codestar â€“ Develop, build and deploy applications"),
    match: (*string)((len=17) "codestar Codestar"),
    uid: (*string)((len=8) "codestar"),
    autocomplete: (*string)((len=20) "$us-east-1 codestar "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/codesuite/codestar/projects?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/codestar.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "cognito",
    subtitle: (*string)((len=54) "Cognito â€“ User Identity and App Data Synchronization"),
    match: (*string)((len=15) "cognito Cognito"),
    uid: (*string)((len=7) "cognito"),
    autocomplete: (*string)((len=19) "$us-east-1 cognito "),
    arg: ([]string) (len=1) {
      (string) (len=71) "https://us-east-1.console.aws.amazon.com/cognito/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/cognito.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "comprehend",
    subtitle: (*string)((len=45) "ðŸ—‚ Comprehend â€“ Analyze Unstructured Text"),
    match: (*string)((len=21) "comprehend Comprehend"),
    uid: (*string)((len=10) "comprehend"),
    autocomplete: (*string)((len=22) "$us-east-1 comprehend "),
    arg: ([]string) (len=1) {
      (string) (len=78) "https://us-east-1.console.aws.amazon.com/comprehend/home?region=us-east-1#home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/comprehend.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "config",
    subtitle: (*string)((len=47) "Config â€“ Track Resource Inventory and Changes"),
    match: (*string)((len=13) "config Config"),
    uid: (*string)((len=6) "config"),
    autocomplete: (*string)((len=18) "$us-east-1 config "),
    arg: ([]string) (len=1) {
      (string) (len=70) "https://us-east-1.console.aws.amazon.com/config/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/config.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "connect",
    subtitle: (*string)((len=71) "Connect â€“ managed contact center that enables engagement at any scale"),
    match: (*string)((len=15) "connect Connect"),
    uid: (*string)((len=7) "connect"),
    autocomplete: (*string)((len=19) "$us-east-1 connect "),
    arg: ([]string) (len=1) {
      (string) (len=71) "https://us-east-1.console.aws.amazon.com/connect/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/connect.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "controltower",
    subtitle: (*string)((len=70) "Control Tower â€“ set up and govern your multi-account AWS environment"),
    match: (*string)((len=26) "controltower Control Tower"),
    uid: (*string)((len=12) "controltower"),
    autocomplete: (*string)((len=24) "$us-east-1 controltower "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/controltower/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/controltower.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "costmanagement",
    subtitle: (*string)((len=71) "ðŸ—‚ Cost Management â€“ Visualize and Explore Your AWS Costs and Usage"),
    match: (*string)((len=30) "costmanagement Cost Management"),
    uid: (*string)((len=14) "costmanagement"),
    autocomplete: (*string)((len=26) "$us-east-1 costmanagement "),
    arg: ([]string) (len=1) {
      (string) (len=62) "https://console.aws.amazon.com/cost-management/home#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/costmanagement.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "datapipeline",
    subtitle: (*string)((len=57) "Data Pipeline â€“ Orchestration for Data-Driven Workflows"),
    match: (*string)((len=26) "datapipeline Data Pipeline"),
    uid: (*string)((len=12) "datapipeline"),
    autocomplete: (*string)((len=24) "$us-east-1 datapipeline "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/datapipeline/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/datapipeline.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "datasync",
    subtitle: (*string)((len=77) "ðŸ—‚ DataSync â€“ DataSync simplifies, automates, and accelerates moving data"),
    match: (*string)((len=17) "datasync DataSync"),
    uid: (*string)((len=8) "datasync"),
    autocomplete: (*string)((len=20) "$us-east-1 datasync "),
    arg: ([]string) (len=1) {
      (string) (len=78) "https://us-east-1.console.aws.amazon.com/datasync/home?region=us-east-1#/tasks"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/datasync.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "deeplens",
    subtitle: (*string)((len=52) "ðŸ—‚ DeepLens â€“ Deep Learning Enabled Video Camera"),
    match: (*string)((len=17) "deeplens DeepLens"),
    uid: (*string)((len=8) "deeplens"),
    autocomplete: (*string)((len=20) "$us-east-1 deeplens "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/deeplens/home?region=us-east-1#projects"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/deeplens.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "devicefarm",
    subtitle: (*string)((len=81) "ðŸ—‚ Device Farm â€“ Test Android, iOS, and Web Apps on Real Devices in the Cloud"),
    match: (*string)((len=22) "devicefarm Device Farm"),
    uid: (*string)((len=10) "devicefarm"),
    autocomplete: (*string)((len=22) "$us-east-1 devicefarm "),
    arg: ([]string) (len=1) {
      (string) (len=63) "https://console.aws.amazon.com/devicefarm/home#/mobile/projects"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/devicefarm.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "directconnect",
    subtitle: (*string)((len=59) "ðŸ—‚ Direct Connect â€“ Dedicated Network Connection to AWS"),
    match: (*string)((len=28) "directconnect Direct Connect"),
    uid: (*string)((len=13) "directconnect"),
    autocomplete: (*string)((len=25) "$us-east-1 directconnect "),
    arg: ([]string) (len=1) {
      (string) (len=65) "https://console.aws.amazon.com/directconnect/v2/home#/connections"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/directconnect.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=16) "directoryservice",
    subtitle: (*string)((len=59) "ðŸ—‚ Directory Service â€“ Host and Manage Active Directory"),
    match: (*string)((len=34) "directoryservice Directory Service"),
    uid: (*string)((len=16) "directoryservice"),
    autocomplete: (*string)((len=28) "$us-east-1 directoryservice "),
    arg: ([]string) (len=1) {
      (string) (len=99) "https://us-east-1.console.aws.amazon.com/directoryservicev2/identity?region=us-east-1#!/directories"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=27) "images/directoryservice.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "dms",
    subtitle: (*string)((len=75) "ðŸ—‚ Database Migation Service (DMS) â€“ Managed Database Migration Service"),
    match: (*string)((len=3) "dms"),
    uid: (*string)((len=3) "dms"),
    autocomplete: (*string)((len=15) "$us-east-1 dms "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/dms/v2/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/dms.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "documentdb",
    subtitle: (*string)((len=69) "ðŸ—‚ DocumentDB â€“ Fully-managed MongoDB-compatible database service"),
    match: (*string)((len=21) "documentdb DocumentDB"),
    uid: (*string)((len=10) "documentdb"),
    autocomplete: (*string)((len=22) "$us-east-1 documentdb "),
    arg: ([]string) (len=1) {
      (string) (len=78) "https://us-east-1.console.aws.amazon.com/docdb/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/documentdb.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "dynamodb",
    subtitle: (*string)((len=40) "ðŸ—‚ DynamoDB â€“ Managed NoSQL Database"),
    match: (*string)((len=17) "dynamodb DynamoDB"),
    uid: (*string)((len=8) "dynamodb"),
    autocomplete: (*string)((len=20) "$us-east-1 dynamodb "),
    arg: ([]string) (len=1) {
      (string) (len=83) "https://us-east-1.console.aws.amazon.com/dynamodbv2/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/dynamodb.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "ec2",
    subtitle: (*string)((len=65) "ðŸ—‚ Elastic Cloud Compute (EC2) â€“ Virtual Servers in the Cloud"),
    match: (*string)((len=3) "ec2"),
    uid: (*string)((len=3) "ec2"),
    autocomplete: (*string)((len=15) "$us-east-1 ec2 "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/ec2/home?region=us-east-1#Home:"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/ec2.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "ecr",
    subtitle: (*string)((len=81) "ðŸ—‚ Elastic Container Registry (ECR) â€“ Fully-managed Docker container registry"),
    match: (*string)((len=3) "ecr"),
    uid: (*string)((len=3) "ecr"),
    autocomplete: (*string)((len=15) "$us-east-1 ecr "),
    arg: ([]string) (len=1) {
      (string) (len=92) "https://us-east-1.console.aws.amazon.com/ecr/private-registry/repositories?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/ecr.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "ecs",
    subtitle: (*string)((len=73) "ðŸ—‚ Elastic Container Service (ECS) â€“ Run and Manage Docker Containers"),
    match: (*string)((len=3) "ecs"),
    uid: (*string)((len=3) "ecs"),
    autocomplete: (*string)((len=15) "$us-east-1 ecs "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/ecs/home?region=us-east-1#/clusters"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/ecs.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "efs",
    subtitle: (*string)((len=64) "ðŸ—‚ Elastic File Storage (EFS) â€“ Managed File Storage for EC2"),
    match: (*string)((len=3) "efs"),
    uid: (*string)((len=3) "efs"),
    autocomplete: (*string)((len=15) "$us-east-1 efs "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/efs/home?region=us-east-1#/file-systems"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/efs.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "eks",
    subtitle: (*string)((len=67) "ðŸ—‚ Elastic Kubernetes Service (EKS) â€“ Managed Kubernetes on AWS"),
    match: (*string)((len=3) "eks"),
    uid: (*string)((len=3) "eks"),
    autocomplete: (*string)((len=15) "$us-east-1 eks "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/eks/home?region=us-east-1#/clusters"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/eks.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "elasticache",
    subtitle: (*string)((len=36) "ðŸ—‚ ElastiCache â€“ In-Memory Cache"),
    match: (*string)((len=23) "elasticache ElastiCache"),
    uid: (*string)((len=11) "elasticache"),
    autocomplete: (*string)((len=23) "$us-east-1 elasticache "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-east-1.console.aws.amazon.com/elasticache/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/elasticache.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=16) "elasticbeanstalk",
    subtitle: (*string)((len=50) "ðŸ—‚ Elastic Beanstalk â€“ Run and Manage Web Apps"),
    match: (*string)((len=34) "elasticbeanstalk Elastic Beanstalk"),
    uid: (*string)((len=16) "elasticbeanstalk"),
    autocomplete: (*string)((len=28) "$us-east-1 elasticbeanstalk "),
    arg: ([]string) (len=1) {
      (string) (len=93) "https://us-east-1.console.aws.amazon.com/elasticbeanstalk/home?region=us-east-1#/environments"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=27) "images/elasticbeanstalk.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "oss",
    subtitle: (*string)((len=127) "ðŸ—‚ OpenSearch Service (OSS) â€“ Run open-source OpenSearch or Elasticsearch using Managed Clusters or Serverless deployments."),
    match: (*string)((len=32) "oss ess elasticsearch opensearch"),
    uid: (*string)((len=3) "oss"),
    autocomplete: (*string)((len=15) "$us-east-1 oss "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/aos/home?region=us-east-1#opensearch/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/oss.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=17) "elastictranscoder",
    subtitle: (*string)((len=61) "Elastic Transcoder â€“ Easy-to-Use Scalable Media Transcoding"),
    match: (*string)((len=36) "elastictranscoder Elastic Transcoder"),
    uid: (*string)((len=17) "elastictranscoder"),
    autocomplete: (*string)((len=29) "$us-east-1 elastictranscoder "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/elastictranscoder/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=28) "images/elastictranscoder.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "emr",
    subtitle: (*string)((len=58) "ðŸ—‚ Elastic Map Reduce (EMR) â€“ Managed Hadoop Framework"),
    match: (*string)((len=20) "emr hadoop mapreduce"),
    uid: (*string)((len=3) "emr"),
    autocomplete: (*string)((len=15) "$us-east-1 emr "),
    arg: ([]string) (len=1) {
      (string) (len=93) "https://us-east-1.console.aws.amazon.com/elasticmapreduce/home?region=us-east-1#cluster-list:"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/emr.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "eventbridge",
    subtitle: (*string)((len=115) "ðŸ—‚ EventBridge â€“ Serverless event bus that connects application data from your own apps, SaaS, and AWS services"),
    match: (*string)((len=23) "eventbridge EventBridge"),
    uid: (*string)((len=11) "eventbridge"),
    autocomplete: (*string)((len=23) "$us-east-1 eventbridge "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/events/home?region=us-east-1#/events"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/eventbridge.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "forecast",
    subtitle: (*string)((len=71) "Forecast â€“ fully-managed service for accurate time-series forecasting"),
    match: (*string)((len=17) "forecast Forecast"),
    uid: (*string)((len=8) "forecast"),
    autocomplete: (*string)((len=20) "$us-east-1 forecast "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/forecast/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/forecast.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "freertos",
    subtitle: (*string)((len=54) "FreeRTOS â€“ IoT Operating System for Microcontrollers"),
    match: (*string)((len=17) "freertos FreeRTOS"),
    uid: (*string)((len=8) "freertos"),
    autocomplete: (*string)((len=20) "$us-east-1 freertos "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/freertos/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/freertos.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "fsx",
    subtitle: (*string)((len=88) "ðŸ—‚ FSx â€“ Fully managed third-party file systems optimized for a variety of workloads"),
    match: (*string)((len=7) "fsx FSx"),
    uid: (*string)((len=3) "fsx"),
    autocomplete: (*string)((len=15) "$us-east-1 fsx "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/fsx/home?region=us-east-1#file-systems"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/fsx.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "gamelift",
    subtitle: (*string)((len=61) "GameLift â€“ Deploy and Scale Session-based Multiplayer Games"),
    match: (*string)((len=17) "gamelift GameLift"),
    uid: (*string)((len=8) "gamelift"),
    autocomplete: (*string)((len=20) "$us-east-1 gamelift "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/gamelift/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/gamelift.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "glacier",
    subtitle: (*string)((len=43) "S3 Glacier â€“ Archive Storage in the Cloud"),
    match: (*string)((len=18) "glacier S3 Glacier"),
    uid: (*string)((len=7) "glacier"),
    autocomplete: (*string)((len=19) "$us-east-1 glacier "),
    arg: ([]string) (len=1) {
      (string) (len=71) "https://us-east-1.console.aws.amazon.com/glacier/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/glacier.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=17) "globalaccelerator",
    subtitle: (*string)((len=109) "Global Accelerator â€“ Improve your applicationâ€™s availability and performance using the AWS Global Network"),
    match: (*string)((len=36) "globalaccelerator Global Accelerator"),
    uid: (*string)((len=17) "globalaccelerator"),
    autocomplete: (*string)((len=29) "$us-east-1 globalaccelerator "),
    arg: ([]string) (len=1) {
      (string) (len=96) "https://us-east-1.console.aws.amazon.com/ec2/v2/home?region=us-east-1#GlobalAcceleratorDashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=28) "images/globalaccelerator.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=4) "glue",
    subtitle: (*string)((len=70) "ðŸ—‚ Glue â€“ fully managed ETL (extract, transform, and load) service"),
    match: (*string)((len=9) "glue Glue"),
    uid: (*string)((len=4) "glue"),
    autocomplete: (*string)((len=16) "$us-east-1 glue "),
    arg: ([]string) (len=1) {
      (string) (len=94) "https://us-east-1.console.aws.amazon.com/glue/home?region=us-east-1#/v2/data-catalog/databases"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=15) "images/glue.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "groundstation",
    subtitle: (*string)((len=51) "ðŸ—‚ Ground Station â€“ Communicate with satellites"),
    match: (*string)((len=28) "groundstation Ground Station"),
    uid: (*string)((len=13) "groundstation"),
    autocomplete: (*string)((len=25) "$us-east-1 groundstation "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/groundstation/home?region=us-east-1#/contacts"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/groundstation.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "guardduty",
    subtitle: (*string)((len=90) "ðŸ—‚ GuardDuty â€“ Intelligent Threat Detection to Protect Your AWS Accounts and Workloads"),
    match: (*string)((len=19) "guardduty GuardDuty"),
    uid: (*string)((len=9) "guardduty"),
    autocomplete: (*string)((len=21) "$us-east-1 guardduty "),
    arg: ([]string) (len=1) {
      (string) (len=82) "https://us-east-1.console.aws.amazon.com/guardduty/home?region=us-east-1#/findings"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/guardduty.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "iam",
    subtitle: (*string)((len=84) "ðŸ—‚ Identity and Access Management (IAM) â€“ Manage User Access and Encryption Keys"),
    match: (*string)((len=3) "iam"),
    uid: (*string)((len=3) "iam"),
    autocomplete: (*string)((len=15) "$us-east-1 iam "),
    arg: ([]string) (len=1) {
      (string) (len=45) "https://console.aws.amazon.com/iam/home#/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/iam.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "accessanalyzer",
    subtitle: (*string)((len=52) "ðŸ—‚ Access Analyzer â€“ Monitor access to resources"),
    match: (*string)((len=34) "accessanalyzer Access Analyzer iam"),
    uid: (*string)((len=14) "accessanalyzer"),
    autocomplete: (*string)((len=26) "$us-east-1 accessanalyzer "),
    arg: ([]string) (len=1) {
      (string) (len=85) "https://us-east-1.console.aws.amazon.com/access-analyzer/home?region=us-east-1#/rules"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/accessanalyzer.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "inspector",
    subtitle: (*string)((len=42) "Inspector â€“ Analyze Application Security"),
    match: (*string)((len=19) "inspector Inspector"),
    uid: (*string)((len=9) "inspector"),
    autocomplete: (*string)((len=21) "$us-east-1 inspector "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/inspector/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/inspector.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "iot1click",
    subtitle: (*string)((len=64) "IoT 1-Click â€“ Trigger AWS Lambda functions from simple devices"),
    match: (*string)((len=21) "iot1click IoT 1-Click"),
    uid: (*string)((len=9) "iot1click"),
    autocomplete: (*string)((len=21) "$us-east-1 iot1click "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/iot1click/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/iot1click.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "iotanalytics",
    subtitle: (*string)((len=87) "IoT Analytics â€“ Collect, preprocess, store, analyze and visualize data of IoT devices"),
    match: (*string)((len=26) "iotanalytics IoT Analytics"),
    uid: (*string)((len=12) "iotanalytics"),
    autocomplete: (*string)((len=24) "$us-east-1 iotanalytics "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/iotanalytics/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/iotanalytics.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "iot",
    subtitle: (*string)((len=41) "IoT Core â€“ Connect Devices to the Cloud"),
    match: (*string)((len=12) "iot IoT Core"),
    uid: (*string)((len=3) "iot"),
    autocomplete: (*string)((len=15) "$us-east-1 iot "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/iot/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/iot.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=17) "iotdevicedefender",
    subtitle: (*string)((len=52) "IoT Device Defender â€“ Connect Devices to the Cloud"),
    match: (*string)((len=37) "iotdevicedefender IoT Device Defender"),
    uid: (*string)((len=17) "iotdevicedefender"),
    autocomplete: (*string)((len=29) "$us-east-1 iotdevicedefender "),
    arg: ([]string) (len=1) {
      (string) (len=78) "https://us-east-1.console.aws.amazon.com/devicedefender/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=28) "images/iotdevicedefender.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=19) "iotdevicemanagement",
    subtitle: (*string)((len=107) "IoT Device Management â€“ Securely Manage Fleets as Small as One Device, or as Broad as Millions of Devices"),
    match: (*string)((len=41) "iotdevicemanagement IoT Device Management"),
    uid: (*string)((len=19) "iotdevicemanagement"),
    autocomplete: (*string)((len=31) "$us-east-1 iotdevicemanagement "),
    arg: ([]string) (len=1) {
      (string) (len=69) "https://us-east-1.console.aws.amazon.com/iotdm/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=30) "images/iotdevicemanagement.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "iotevents",
    subtitle: (*string)((len=78) "IoT Events â€“ Monitor device fleets for changes and trigger alerts to respond"),
    match: (*string)((len=20) "iotevents IoT Events"),
    uid: (*string)((len=9) "iotevents"),
    autocomplete: (*string)((len=21) "$us-east-1 iotevents "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/iotevents/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/iotevents.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "iotgreengrass",
    subtitle: (*string)((len=54) "IoT Greengrass â€“ Deploy and run code on your devices"),
    match: (*string)((len=28) "iotgreengrass IoT Greengrass"),
    uid: (*string)((len=13) "iotgreengrass"),
    autocomplete: (*string)((len=25) "$us-east-1 iotgreengrass "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/iotgreengrass/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/iotgreengrass.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "iotsitewise",
    subtitle: (*string)((len=63) "IoT SiteWise â€“ Data driven decisions in Industrial operations"),
    match: (*string)((len=24) "iotsitewise IoT SiteWise"),
    uid: (*string)((len=11) "iotsitewise"),
    autocomplete: (*string)((len=23) "$us-east-1 iotsitewise "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-east-1.console.aws.amazon.com/iotsitewise/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/iotsitewise.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "iotthingsgraph",
    subtitle: (*string)((len=86) "IoT Things Graph â€“ Easily connect devices and web services to build IoT applications"),
    match: (*string)((len=31) "iotthingsgraph IoT Things Graph"),
    uid: (*string)((len=14) "iotthingsgraph"),
    autocomplete: (*string)((len=26) "$us-east-1 iotthingsgraph "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-east-1.console.aws.amazon.com/thingsgraph/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/iotthingsgraph.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "msk",
    subtitle: (*string)((len=118) "ðŸ—‚ Managed Streaming for Apache Kafka (MSK) â€“ Fully managed, highly available, and secure service for Apache Kafka"),
    match: (*string)((len=3) "msk"),
    uid: (*string)((len=3) "msk"),
    autocomplete: (*string)((len=15) "$us-east-1 msk "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/msk/home?region=us-east-1#/clusters"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/msk.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "kms",
    subtitle: (*string)((len=86) "ðŸ—‚ Key Management Service (KMS) â€“ Securely Generate and Manage AWS Encryption Keys"),
    match: (*string)((len=3) "kms"),
    uid: (*string)((len=3) "kms"),
    autocomplete: (*string)((len=15) "$us-east-1 kms "),
    arg: ([]string) (len=1) {
      (string) (len=83) "https://us-east-1.console.aws.amazon.com/kms/home?region=us-east-1#/kms/defaultKeys"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/kms.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "kinesis",
    subtitle: (*string)((len=51) "ðŸ—‚ Kinesis â€“ Work with Real-Time Streaming Data"),
    match: (*string)((len=15) "kinesis Kinesis"),
    uid: (*string)((len=7) "kinesis"),
    autocomplete: (*string)((len=19) "$us-east-1 kinesis "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/kinesis/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/kinesis.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "lambda",
    subtitle: (*string)((len=55) "ðŸ—‚ Lambda â€“ Run Code without Thinking about Servers"),
    match: (*string)((len=13) "lambda Lambda"),
    uid: (*string)((len=6) "lambda"),
    autocomplete: (*string)((len=18) "$us-east-1 lambda "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/lambda/home?region=us-east-1#/discover"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/lambda.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "lex",
    subtitle: (*string)((len=37) "Lex â€“ Build Voice and Text Chatbots"),
    match: (*string)((len=7) "lex Lex"),
    uid: (*string)((len=3) "lex"),
    autocomplete: (*string)((len=15) "$us-east-1 lex "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/lexv2/home?region=us-east-1#bots"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/lex.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "licensemanager",
    subtitle: (*string)((len=99) "License Manager â€“ Set rules to manage, discover, and report third-party license usage proactively"),
    match: (*string)((len=30) "licensemanager License Manager"),
    uid: (*string)((len=14) "licensemanager"),
    autocomplete: (*string)((len=26) "$us-east-1 licensemanager "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/license-manager/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/licensemanager.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "lightsail",
    subtitle: (*string)((len=55) "Lightsail â€“ Launch and Manage Virtual Private Servers"),
    match: (*string)((len=19) "lightsail Lightsail"),
    uid: (*string)((len=9) "lightsail"),
    autocomplete: (*string)((len=21) "$us-east-1 lightsail "),
    arg: ([]string) (len=1) {
      (string) (len=47) "https://lightsail.aws.amazon.com/ls/webapp/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/lightsail.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=5) "macie",
    subtitle: (*string)((len=77) "Macie â€“ Amazon Macie classifies and secures your business-critical content."),
    match: (*string)((len=11) "macie Macie"),
    uid: (*string)((len=5) "macie"),
    autocomplete: (*string)((len=17) "$us-east-1 macie "),
    arg: ([]string) (len=1) {
      (string) (len=69) "https://us-east-1.console.aws.amazon.com/macie/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=16) "images/macie.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=15) "managedservices",
    subtitle: (*string)((len=53) "Managed Services â€“ IT operations management for AWS"),
    match: (*string)((len=32) "managedservices Managed Services"),
    uid: (*string)((len=15) "managedservices"),
    autocomplete: (*string)((len=27) "$us-east-1 managedservices "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/managedservices/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=26) "images/managedservices.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "marketplace",
    subtitle: (*string)((len=95) "ðŸ—‚ Marketplace Subscriptions â€“ Digital catalog where you can find, buy, and deploy software"),
    match: (*string)((len=37) "marketplace Marketplace Subscriptions"),
    uid: (*string)((len=11) "marketplace"),
    autocomplete: (*string)((len=23) "$us-east-1 marketplace "),
    arg: ([]string) (len=1) {
      (string) (len=62) "https://console.aws.amazon.com/marketplace/home#/subscriptions"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/marketplace.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "mediaconnect",
    subtitle: (*string)((len=72) "MediaConnect â€“ Reliable, secure, and flexible transport for live video"),
    match: (*string)((len=25) "mediaconnect MediaConnect"),
    uid: (*string)((len=12) "mediaconnect"),
    autocomplete: (*string)((len=24) "$us-east-1 mediaconnect "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/mediaconnect/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/mediaconnect.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "mediaconvert",
    subtitle: (*string)((len=87) "ðŸ—‚ MediaConvert â€“ Convert file-based content for broadcast and multiscreen delivery"),
    match: (*string)((len=25) "mediaconvert MediaConvert"),
    uid: (*string)((len=12) "mediaconvert"),
    autocomplete: (*string)((len=24) "$us-east-1 mediaconvert "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/mediaconvert/home?region=us-east-1#/jobs/list"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/mediaconvert.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "medialive",
    subtitle: (*string)((len=94) "ðŸ—‚ MediaLive â€“ Convert video inputs into live outputs for broadcast and streaming delivery"),
    match: (*string)((len=19) "medialive MediaLive"),
    uid: (*string)((len=9) "medialive"),
    autocomplete: (*string)((len=21) "$us-east-1 medialive "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/medialive/home?region=us-east-1#!/inputs"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/medialive.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "mediapackage",
    subtitle: (*string)((len=88) "ðŸ—‚ MediaPackage â€“ Deliver video to many devices using just-in-time format conversion"),
    match: (*string)((len=25) "mediapackage MediaPackage"),
    uid: (*string)((len=12) "mediapackage"),
    autocomplete: (*string)((len=24) "$us-east-1 mediapackage "),
    arg: ([]string) (len=1) {
      (string) (len=85) "https://us-east-1.console.aws.amazon.com/mediapackage/home?region=us-east-1#/channels"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/mediapackage.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "mediastore",
    subtitle: (*string)((len=83) "MediaStore â€“ Store and deliver video assets for live or on-demand media workflows"),
    match: (*string)((len=21) "mediastore MediaStore"),
    uid: (*string)((len=10) "mediastore"),
    autocomplete: (*string)((len=22) "$us-east-1 mediastore "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/mediastore/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/mediastore.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "mediatailor",
    subtitle: (*string)((len=95) "ðŸ—‚ MediaTailor â€“ Personalize and monetize multiscreen content with server-side ad insertion"),
    match: (*string)((len=23) "mediatailor MediaTailor"),
    uid: (*string)((len=11) "mediatailor"),
    autocomplete: (*string)((len=23) "$us-east-1 mediatailor "),
    arg: ([]string) (len=1) {
      (string) (len=88) "https://us-east-1.console.aws.amazon.com/mediatailor/home?region=us-east-1#/controlpanel"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/mediatailor.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "migrationhub",
    subtitle: (*string)((len=83) "Migration Hub â€“ Simplify and accelerate the migration of your data centers to AWS"),
    match: (*string)((len=26) "migrationhub Migration Hub"),
    uid: (*string)((len=12) "migrationhub"),
    autocomplete: (*string)((len=24) "$us-east-1 migrationhub "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/migrationhub/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/migrationhub.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=2) "mq",
    subtitle: (*string)((len=62) "ðŸ—‚ MQ â€“ Managed message broker service for Apache ActiveMQ"),
    match: (*string)((len=14) "mq MQ activemq"),
    uid: (*string)((len=2) "mq"),
    autocomplete: (*string)((len=14) "$us-east-1 mq "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/amazon-mq/home?region=us-east-1#/brokers"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=13) "images/mq.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "neptune",
    subtitle: (*string)((len=66) "ðŸ—‚ Neptune â€“ Fast, reliable graph database built for the cloud"),
    match: (*string)((len=15) "neptune Neptune"),
    uid: (*string)((len=7) "neptune"),
    autocomplete: (*string)((len=19) "$us-east-1 neptune "),
    arg: ([]string) (len=1) {
      (string) (len=81) "https://us-east-1.console.aws.amazon.com/neptune/home?region=us-east-1#databases:"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/neptune.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "opsworks",
    subtitle: (*string)((len=63) "ðŸ—‚ OpsWorks â€“ Configuration Management with Chef and Puppet"),
    match: (*string)((len=17) "opsworks OpsWorks"),
    uid: (*string)((len=8) "opsworks"),
    autocomplete: (*string)((len=20) "$us-east-1 opsworks "),
    arg: ([]string) (len=1) {
      (string) (len=55) "https://console.aws.amazon.com/opsworks/home#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/opsworks.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "organizations",
    subtitle: (*string)((len=68) "Organizations â€“ Policy-based management for multiple AWS accounts."),
    match: (*string)((len=27) "organizations Organizations"),
    uid: (*string)((len=13) "organizations"),
    autocomplete: (*string)((len=25) "$us-east-1 organizations "),
    arg: ([]string) (len=1) {
      (string) (len=64) "https://console.aws.amazon.com/organizations/v2/home/invitations"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/organizations.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "personalize",
    subtitle: (*string)((len=65) "Personalize â€“ easily add real-time recommendations to your apps"),
    match: (*string)((len=23) "personalize Personalize"),
    uid: (*string)((len=11) "personalize"),
    autocomplete: (*string)((len=23) "$us-east-1 personalize "),
    arg: ([]string) (len=1) {
      (string) (len=88) "https://us-east-1.console.aws.amazon.com/personalize/home?region=us-east-1#datasetGroups"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/personalize.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "pinpoint",
    subtitle: (*string)((len=63) "ðŸ—‚ Pinpoint â€“ Engage Users via Email, SMS, Push & Analytics"),
    match: (*string)((len=17) "pinpoint Pinpoint"),
    uid: (*string)((len=8) "pinpoint"),
    autocomplete: (*string)((len=20) "$us-east-1 pinpoint "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/pinpoint/home?region=us-east-1#/apps"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/pinpoint.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=5) "polly",
    subtitle: (*string)((len=45) "ðŸ—‚ Polly â€“ Turn Text into Lifelike Speech"),
    match: (*string)((len=11) "polly Polly"),
    uid: (*string)((len=5) "polly"),
    autocomplete: (*string)((len=17) "$us-east-1 polly "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/polly/home/SynthesizeSpeech?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=16) "images/polly.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "quicksight",
    subtitle: (*string)((len=51) "QuickSight â€“ Fast, easy to use business analytics"),
    match: (*string)((len=21) "quicksight QuickSight"),
    uid: (*string)((len=10) "quicksight"),
    autocomplete: (*string)((len=22) "$us-east-1 quicksight "),
    arg: ([]string) (len=1) {
      (string) (len=34) "https://quicksight.aws.amazon.com/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/quicksight.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "rds",
    subtitle: (*string)((len=78) "ðŸ—‚ Relational Database Service (RDS) â€“ Managed Relational Database Service"),
    match: (*string)((len=3) "rds"),
    uid: (*string)((len=3) "rds"),
    autocomplete: (*string)((len=15) "$us-east-1 rds "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/rds/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/rds.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "redshift",
    subtitle: (*string)((len=63) "ðŸ—‚ Redshift â€“ Fast, Simple, Cost-Effective Data Warehousing"),
    match: (*string)((len=17) "redshift Redshift"),
    uid: (*string)((len=8) "redshift"),
    autocomplete: (*string)((len=20) "$us-east-1 redshift "),
    arg: ([]string) (len=1) {
      (string) (len=83) "https://us-east-1.console.aws.amazon.com/redshiftv2/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/redshift.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "rekognition",
    subtitle: (*string)((len=46) "ðŸ—‚ Rekognition â€“ Search and Analyze Images"),
    match: (*string)((len=23) "rekognition Rekognition"),
    uid: (*string)((len=11) "rekognition"),
    autocomplete: (*string)((len=23) "$us-east-1 rekognition "),
    arg: ([]string) (len=1) {
      (string) (len=85) "https://us-east-1.console.aws.amazon.com/rekognition/custom-labels?region=us-east-1#/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/rekognition.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "ram",
    subtitle: (*string)((len=93) "ðŸ—‚ Resource Access Manager â€“ Share AWS resources with other accounts or AWS Organizations"),
    match: (*string)((len=27) "ram Resource Access Manager"),
    uid: (*string)((len=3) "ram"),
    autocomplete: (*string)((len=15) "$us-east-1 ram "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/ram/home?region=us-east-1#OwnedResourceShares:"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/ram.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=17) "resource-explorer",
    subtitle: (*string)((len=114) "Resource Explorer â€“ Find relevant resources across AWS Regions using resource metadata, tags and simple keywords"),
    match: (*string)((len=35) "resource-explorer Resource Explorer"),
    uid: (*string)((len=17) "resource-explorer"),
    autocomplete: (*string)((len=29) "$us-east-1 resource-explorer "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/resource-explorer/home?region=us-east-1#search"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=28) "images/resource-explorer.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "robomaker",
    subtitle: (*string)((len=78) "ðŸ—‚ RoboMaker â€“ Develop, test, and deploy intelligent robotics applications"),
    match: (*string)((len=19) "robomaker RoboMaker"),
    uid: (*string)((len=9) "robomaker"),
    autocomplete: (*string)((len=21) "$us-east-1 robomaker "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/robomaker/home?region=us-east-1#ides"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/robomaker.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "route53",
    subtitle: (*string)((len=59) "ðŸ—‚ Route 53 â€“ Scalable DNS and Domain Name Registration"),
    match: (*string)((len=16) "route53 Route 53"),
    uid: (*string)((len=7) "route53"),
    autocomplete: (*string)((len=19) "$us-east-1 route53 "),
    arg: ([]string) (len=1) {
      (string) (len=56) "https://console.aws.amazon.com/route53/v2/home#Dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/route53.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=2) "s3",
    subtitle: (*string)((len=66) "ðŸ—‚ Simple Storage Service (S3) â€“ Scalable Storage in the Cloud"),
    match: (*string)((len=2) "s3"),
    uid: (*string)((len=2) "s3"),
    autocomplete: (*string)((len=14) "$us-east-1 s3 "),
    arg: ([]string) (len=1) {
      (string) (len=66) "https://us-east-1.console.aws.amazon.com/s3/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=13) "images/s3.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "sagemaker",
    subtitle: (*string)((len=62) "SageMaker â€“ Build, Train, and Deploy Machine Learning Models"),
    match: (*string)((len=19) "sagemaker SageMaker"),
    uid: (*string)((len=9) "sagemaker"),
    autocomplete: (*string)((len=21) "$us-east-1 sagemaker "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/sagemaker/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/sagemaker.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "secretsmanager",
    subtitle: (*string)((len=90) "Secrets Manager â€“ Easily rotate, manage, and retrieve secrets throughout their lifecycle"),
    match: (*string)((len=30) "secretsmanager Secrets Manager"),
    uid: (*string)((len=14) "secretsmanager"),
    autocomplete: (*string)((len=26) "$us-east-1 secretsmanager "),
    arg: ([]string) (len=1) {
      (string) (len=91) "https://us-east-1.console.aws.amazon.com/secretsmanager/home?region=us-east-1#!/listSecrets"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/secretsmanager.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "securityhub",
    subtitle: (*string)((len=55) "Security Hub â€“ AWSâ€™s security and compliance center"),
    match: (*string)((len=24) "securityhub Security Hub"),
    uid: (*string)((len=11) "securityhub"),
    autocomplete: (*string)((len=23) "$us-east-1 securityhub "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-east-1.console.aws.amazon.com/securityhub/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/securityhub.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "serverlessrepo",
    subtitle: (*string)((len=119) "ðŸ—‚ Serverless Application Repository â€“ Assemble, deploy, and share serverless applications within teams or publicly"),
    match: (*string)((len=48) "serverlessrepo Serverless Application Repository"),
    uid: (*string)((len=14) "serverlessrepo"),
    autocomplete: (*string)((len=26) "$us-east-1 serverlessrepo "),
    arg: ([]string) (len=1) {
      (string) (len=101) "https://us-east-1.console.aws.amazon.com/serverlessrepo/home?region=us-east-1#/available-applications"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/serverlessrepo.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=22) "servermigrationservice",
    subtitle: (*string)((len=63) "Server Migration Service â€“ Migrate on-premises servers to AWS"),
    match: (*string)((len=47) "servermigrationservice Server Migration Service"),
    uid: (*string)((len=22) "servermigrationservice"),
    autocomplete: (*string)((len=34) "$us-east-1 servermigrationservice "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/servermigration/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=33) "images/servermigrationservice.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "servicecatalog",
    subtitle: (*string)((len=153) "ðŸ—‚ Service Catalog â€“ allows organizations to manage approved catalogs of IT resources and make them available to employees via a personalized portal."),
    match: (*string)((len=30) "servicecatalog Service Catalog"),
    uid: (*string)((len=14) "servicecatalog"),
    autocomplete: (*string)((len=26) "$us-east-1 servicecatalog "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/servicecatalog/home?region=us-east-1#products"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/servicecatalog.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "ses",
    subtitle: (*string)((len=66) "Simple Email Service (SES) â€“ Email Sending and Receiving Service"),
    match: (*string)((len=3) "ses"),
    uid: (*string)((len=3) "ses"),
    autocomplete: (*string)((len=15) "$us-east-1 ses "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/ses/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/ses.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "swf",
    subtitle: (*string)((len=90) "Simple Workflow Service (SWF) â€“ Workflow Service for Coordinating Application Components"),
    match: (*string)((len=3) "swf"),
    uid: (*string)((len=3) "swf"),
    autocomplete: (*string)((len=15) "$us-east-1 swf "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/swf/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/swf.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "transfer",
    subtitle: (*string)((len=62) "Transfer for SFTP â€“ Fully-managed SFTP service for Amazon S3"),
    match: (*string)((len=26) "transfer Transfer for SFTP"),
    uid: (*string)((len=8) "transfer"),
    autocomplete: (*string)((len=20) "$us-east-1 transfer "),
    arg: ([]string) (len=1) {
      (string) (len=72) "https://us-east-1.console.aws.amazon.com/transfer/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/transfer.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "singlesignon",
    subtitle: (*string)((len=101) "Single Sign-On (SSO) â€“ Manage Single Sign-On (SSO) Access to AWS Accounts and Business Applications"),
    match: (*string)((len=12) "singlesignon"),
    uid: (*string)((len=12) "singlesignon"),
    autocomplete: (*string)((len=24) "$us-east-1 singlesignon "),
    arg: ([]string) (len=1) {
      (string) (len=76) "https://us-east-1.console.aws.amazon.com/singlesignon/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/singlesignon.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "snowfamily",
    subtitle: (*string)((len=82) "ðŸ—‚ Snow Family â€“ Process data at the edge and migrate data into and out of AWS"),
    match: (*string)((len=51) "snowfamily Snow Family snowball snowcone snowmobile"),
    uid: (*string)((len=10) "snowfamily"),
    autocomplete: (*string)((len=22) "$us-east-1 snowfamily "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/snowfamily/home?region=us-east-1#/jobs"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/snowfamily.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "sns",
    subtitle: (*string)((len=75) "ðŸ—‚ Simple Notification Service (SNS) â€“ SNS Pub/Sub, Mobile Push and SMS"),
    match: (*string)((len=3) "sns"),
    uid: (*string)((len=3) "sns"),
    autocomplete: (*string)((len=15) "$us-east-1 sns "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/sns/v3/home?region=us-east-1#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/sns.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "sqs",
    subtitle: (*string)((len=62) "ðŸ—‚ Simple Queue Service (SQS) â€“ SQS Managed Message Queues"),
    match: (*string)((len=3) "sqs"),
    uid: (*string)((len=3) "sqs"),
    autocomplete: (*string)((len=15) "$us-east-1 sqs "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/sqs/v2/home?region=us-east-1#/queues"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/sqs.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "stepfunctions",
    subtitle: (*string)((len=59) "ðŸ—‚ Step Functions â€“ Coordinate Distributed Applications"),
    match: (*string)((len=28) "stepfunctions Step Functions"),
    uid: (*string)((len=13) "stepfunctions"),
    autocomplete: (*string)((len=25) "$us-east-1 stepfunctions "),
    arg: ([]string) (len=1) {
      (string) (len=84) "https://us-east-1.console.aws.amazon.com/states/home?region=us-east-1#/statemachines"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/stepfunctions.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "storagegateway",
    subtitle: (*string)((len=51) "ðŸ—‚ Storage Gateway â€“ Hybrid Storage Integration"),
    match: (*string)((len=30) "storagegateway Storage Gateway"),
    uid: (*string)((len=14) "storagegateway"),
    autocomplete: (*string)((len=26) "$us-east-1 storagegateway "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-east-1.console.aws.amazon.com/storagegateway/home?region=us-east-1#/gateways"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/storagegateway.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "sumerian",
    subtitle: (*string)((len=46) "Sumerian â€“ Build VR, AR, and 3D applications"),
    match: (*string)((len=17) "sumerian Sumerian"),
    uid: (*string)((len=8) "sumerian"),
    autocomplete: (*string)((len=20) "$us-east-1 sumerian "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/sumerianv2/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/sumerian.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "systemsmanager",
    subtitle: (*string)((len=83) "ðŸ—‚ Systems Manager â€“ Gain operational insights and take action on AWS resources"),
    match: (*string)((len=30) "systemsmanager Systems Manager"),
    uid: (*string)((len=14) "systemsmanager"),
    autocomplete: (*string)((len=26) "$us-east-1 systemsmanager "),
    arg: ([]string) (len=1) {
      (string) (len=83) "https://us-east-1.console.aws.amazon.com/systems-manager/explorer?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/systemsmanager.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "support",
    subtitle: (*string)((len=76) "Support â€“ Support the success and operational health of your AWS solutions"),
    match: (*string)((len=15) "support Support"),
    uid: (*string)((len=7) "support"),
    autocomplete: (*string)((len=19) "$us-east-1 support "),
    arg: ([]string) (len=1) {
      (string) (len=43) "https://console.aws.amazon.com/support/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/support.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "transcribe",
    subtitle: (*string)((len=42) "Transcribe â€“ Powerful Speech Recognition"),
    match: (*string)((len=21) "transcribe Transcribe"),
    uid: (*string)((len=10) "transcribe"),
    autocomplete: (*string)((len=22) "$us-east-1 transcribe "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/transcribe/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/transcribe.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "translate",
    subtitle: (*string)((len=46) "ðŸ—‚ Translate â€“ Translate Text in Real-time"),
    match: (*string)((len=19) "translate Translate"),
    uid: (*string)((len=9) "translate"),
    autocomplete: (*string)((len=21) "$us-east-1 translate "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/translate/home?region=us-east-1#metrics"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/translate.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=14) "trustedadvisor",
    subtitle: (*string)((len=58) "ðŸ—‚ Trusted Advisor â€“ Optimize Performance and Security"),
    match: (*string)((len=30) "trustedadvisor Trusted Advisor"),
    uid: (*string)((len=14) "trustedadvisor"),
    autocomplete: (*string)((len=26) "$us-east-1 trustedadvisor "),
    arg: ([]string) (len=1) {
      (string) (len=61) "https://console.aws.amazon.com/trustedadvisor/home#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=25) "images/trustedadvisor.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "vpc",
    subtitle: (*string)((len=55) "ðŸ—‚ Virtual Private Cloud â€“ Isolated Cloud Resources"),
    match: (*string)((len=25) "vpc Virtual Private Cloud"),
    uid: (*string)((len=3) "vpc"),
    autocomplete: (*string)((len=15) "$us-east-1 vpc "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/vpc/home?region=us-east-1#dashboard:"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/vpc.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "waf",
    subtitle: (*string)((len=104) "ðŸ—‚ Web Application Firewall & Shield (WAF) â€“ Protects Against DDoS Attacks and Malicious Web Traffic"),
    match: (*string)((len=3) "waf"),
    uid: (*string)((len=3) "waf"),
    autocomplete: (*string)((len=15) "$us-east-1 waf "),
    arg: ([]string) (len=1) {
      (string) (len=52) "https://console.aws.amazon.com/wafv2/homev2/web-acls"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/waf.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=19) "wellarchitectedtool",
    subtitle: (*string)((len=88) "ðŸ—‚ Well-Architected Tool â€“ Learn best practices, measure, and improve your workloads"),
    match: (*string)((len=41) "wellarchitectedtool Well-Architected Tool"),
    uid: (*string)((len=19) "wellarchitectedtool"),
    autocomplete: (*string)((len=31) "$us-east-1 wellarchitectedtool "),
    arg: ([]string) (len=1) {
      (string) (len=89) "https://us-east-1.console.aws.amazon.com/wellarchitected/home?region=us-east-1#/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=30) "images/wellarchitectedtool.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "worklink",
    subtitle: (*string)((len=74) "WorkLink â€“ Enable secure mobile access to internal websites and web apps"),
    match: (*string)((len=17) "worklink WorkLink"),
    uid: (*string)((len=8) "worklink"),
    autocomplete: (*string)((len=20) "$us-east-1 worklink "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/worklink/home?region=us-east-1#/fleets"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/worklink.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "workmail",
    subtitle: (*string)((len=49) "WorkMail â€“ Secure Email and Calendaring Service"),
    match: (*string)((len=17) "workmail WorkMail"),
    uid: (*string)((len=8) "workmail"),
    autocomplete: (*string)((len=20) "$us-east-1 workmail "),
    arg: ([]string) (len=1) {
      (string) (len=89) "https://us-east-1.console.aws.amazon.com/workmail/v2/home?region=us-east-1#/organizations"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/workmail.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=10) "workspaces",
    subtitle: (*string)((len=36) "WorkSpaces â€“ Desktops in the Cloud"),
    match: (*string)((len=21) "workspaces WorkSpaces"),
    uid: (*string)((len=10) "workspaces"),
    autocomplete: (*string)((len=22) "$us-east-1 workspaces "),
    arg: ([]string) (len=1) {
      (string) (len=74) "https://us-east-1.console.aws.amazon.com/workspaces/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=21) "images/workspaces.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=4) "xray",
    subtitle: (*string)((len=45) "X-Ray â€“ Analyze and Debug Your Applications"),
    match: (*string)((len=10) "xray X-Ray"),
    uid: (*string)((len=4) "xray"),
    autocomplete: (*string)((len=16) "$us-east-1 xray "),
    arg: ([]string) (len=1) {
      (string) (len=68) "https://us-east-1.console.aws.amazon.com/xray/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=15) "images/xray.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "appmesh",
    subtitle: (*string)((len=63) "App Mesh â€“ Application-level networking for all your services"),
    match: (*string)((len=16) "appmesh App Mesh"),
    uid: (*string)((len=7) "appmesh"),
    autocomplete: (*string)((len=19) "$us-east-1 appmesh "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/appmesh/meshes?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/appmesh.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=11) "augmentedai",
    subtitle: (*string)((len=76) "Augmented AI â€“ Easy implement human review of machine learning predictions"),
    match: (*string)((len=24) "augmentedai Augmented AI"),
    uid: (*string)((len=11) "augmentedai"),
    autocomplete: (*string)((len=23) "$us-east-1 augmentedai "),
    arg: ([]string) (len=1) {
      (string) (len=67) "https://us-east-1.console.aws.amazon.com/a2i/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/augmentedai.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "braket",
    subtitle: (*string)((len=61) "ðŸ—‚ Braket â€“ Explore and experiment with quantum computing"),
    match: (*string)((len=13) "braket Braket"),
    uid: (*string)((len=6) "braket"),
    autocomplete: (*string)((len=18) "$us-east-1 braket "),
    arg: ([]string) (len=1) {
      (string) (len=78) "https://us-east-1.console.aws.amazon.com/braket/home?region=us-east-1#/devices"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/braket.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "mcs",
    subtitle: (*string)((len=130) "ðŸ—‚ Keyspaces (for Apache Cassandra) â€“ A scalable, highly available, and managed Apache Cassandraâ€“compatible database service"),
    match: (*string)((len=36) "mcs Keyspaces (for Apache Cassandra)"),
    uid: (*string)((len=3) "mcs"),
    autocomplete: (*string)((len=15) "$us-east-1 mcs "),
    arg: ([]string) (len=1) {
      (string) (len=82) "https://us-east-1.console.aws.amazon.com/keyspaces/home?region=us-east-1#dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/mcs.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=8) "codeguru",
    subtitle: (*string)((len=90) "ðŸ—‚ CodeGuru â€“ Intelligent recommendations for building and running modern applications"),
    match: (*string)((len=17) "codeguru CodeGuru"),
    uid: (*string)((len=8) "codeguru"),
    autocomplete: (*string)((len=20) "$us-east-1 codeguru "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/codeguru/dashboard?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=19) "images/codeguru.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=16) "computeoptimizer",
    subtitle: (*string)((len=80) "Compute Optimizer â€“ Recommend optimal AWS Compute resources for your workloads"),
    match: (*string)((len=34) "computeoptimizer Compute Optimizer"),
    uid: (*string)((len=16) "computeoptimizer"),
    autocomplete: (*string)((len=28) "$us-east-1 computeoptimizer "),
    arg: ([]string) (len=1) {
      (string) (len=53) "https://console.aws.amazon.com/compute-optimizer/home"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=27) "images/computeoptimizer.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "deepracer",
    subtitle: (*string)((len=85) "ðŸ—‚ DeepRacer â€“ Fully autonomous 1/18th scale race car, driven by machine learning"),
    match: (*string)((len=19) "deepracer DeepRacer"),
    uid: (*string)((len=9) "deepracer"),
    autocomplete: (*string)((len=21) "$us-east-1 deepracer "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/deepracer/home?region=us-east-1#league"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/deepracer.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=9) "detective",
    subtitle: (*string)((len=62) "Detective â€“ Investigate and analyse possible security issues"),
    match: (*string)((len=19) "detective Detective"),
    uid: (*string)((len=9) "detective"),
    autocomplete: (*string)((len=21) "$us-east-1 detective "),
    arg: ([]string) (len=1) {
      (string) (len=73) "https://us-east-1.console.aws.amazon.com/detective/home?region=us-east-1#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=20) "images/detective.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=15) "ec2imagebuilder",
    subtitle: (*string)((len=94) "ðŸ—‚ EC2 Image Builder â€“ A managed service to automate build, customize and deploy OS images"),
    match: (*string)((len=33) "ec2imagebuilder EC2 Image Builder"),
    uid: (*string)((len=15) "ec2imagebuilder"),
    autocomplete: (*string)((len=27) "$us-east-1 ec2imagebuilder "),
    arg: ([]string) (len=1) {
      (string) (len=86) "https://us-east-1.console.aws.amazon.com/imagebuilder/home?region=us-east-1#/pipelines"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=26) "images/ec2imagebuilder.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=13) "frauddetector",
    subtitle: (*string)((len=77) "ðŸ—‚ Fraud Detector â€“ Detect more online fraud faster with machine learning"),
    match: (*string)((len=28) "frauddetector Fraud Detector"),
    uid: (*string)((len=13) "frauddetector"),
    autocomplete: (*string)((len=25) "$us-east-1 frauddetector "),
    arg: ([]string) (len=1) {
      (string) (len=89) "https://us-east-1.console.aws.amazon.com/frauddetector/home?region=us-east-1#getDetectors"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=24) "images/frauddetector.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "kendra",
    subtitle: (*string)((len=72) "Kendra â€“ Highly accurate enterprise search powered by machine learning"),
    match: (*string)((len=13) "kendra Kendra"),
    uid: (*string)((len=6) "kendra"),
    autocomplete: (*string)((len=18) "$us-east-1 kendra "),
    arg: ([]string) (len=1) {
      (string) (len=77) "https://us-east-1.console.aws.amazon.com/kendra/home?region=us-east-1#indexes"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/kendra.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=4) "qldb",
    subtitle: (*string)((len=43) "ðŸ—‚ QLDB â€“ Fully managed ledger database"),
    match: (*string)((len=9) "qldb QLDB"),
    uid: (*string)((len=4) "qldb"),
    autocomplete: (*string)((len=16) "$us-east-1 qldb "),
    arg: ([]string) (len=1) {
      (string) (len=79) "https://us-east-1.console.aws.amazon.com/qldb/home?region=us-east-1#ledger-list"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=15) "images/qldb.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "outpost",
    subtitle: (*string)((len=46) "ðŸ—‚ Outposts â€“ Run AWS Services On Premises"),
    match: (*string)((len=16) "outpost Outposts"),
    uid: (*string)((len=7) "outpost"),
    autocomplete: (*string)((len=19) "$us-east-1 outpost "),
    arg: ([]string) (len=1) {
      (string) (len=80) "https://us-east-1.console.aws.amazon.com/outposts/home?region=us-east-1#Outposts"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/outpost.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=2) "iq",
    subtitle: (*string)((len=80) "IQ â€“ Complete projects faster with help from third-party AWS Certified experts"),
    match: (*string)((len=5) "iq IQ"),
    uid: (*string)((len=2) "iq"),
    autocomplete: (*string)((len=14) "$us-east-1 iq "),
    arg: ([]string) (len=1) {
      (string) (len=26) "https://iq.aws.amazon.com/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=13) "images/iq.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=7) "chatbot",
    subtitle: (*string)((len=32) "ðŸ—‚ Chatbot â€“ ChatOps for AWS"),
    match: (*string)((len=15) "chatbot Chatbot"),
    uid: (*string)((len=7) "chatbot"),
    autocomplete: (*string)((len=19) "$us-east-1 chatbot "),
    arg: ([]string) (len=1) {
      (string) (len=57) "https://console.aws.amazon.com/chatbot/home#/chat-clients"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=18) "images/chatbot.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=12) "launchwizard",
    subtitle: (*string)((len=82) "ðŸ—‚ Launch Wizard â€“ Size, configure, and deploy third-party applications on AWS"),
    match: (*string)((len=26) "launchwizard Launch Wizard"),
    uid: (*string)((len=12) "launchwizard"),
    autocomplete: (*string)((len=24) "$us-east-1 launchwizard "),
    arg: ([]string) (len=1) {
      (string) (len=89) "https://us-east-1.console.aws.amazon.com/launchwizard/home?region=us-east-1#SqlDeployment"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=23) "images/launchwizard.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=6) "status",
    subtitle: (*string)((len=56) "Status â€“ Get a personalized view of AWS service health"),
    match: (*string)((len=13) "status Status"),
    uid: (*string)((len=6) "status"),
    autocomplete: (*string)((len=18) "$us-east-1 status "),
    arg: ([]string) (len=1) {
      (string) (len=30) "https://status.aws.amazon.com/"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=17) "images/status.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  })
}
